{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","items","setItems","visible","setVisible","useEffect","fetch","then","res","json","data","className","slice","map","item","id","body","onClick","prevValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAoCeA,EAjCJ,WAAM,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,OAEeF,mBAAS,GAFxB,mBAERG,EAFQ,KAECC,EAFD,KAcd,OANAC,qBAAU,WACPC,MAAM,8CACNC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAWR,EAASQ,QAE1B,IAEA,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACGV,EAAMW,MAAM,EAAET,GAASU,KAAI,SAACC,GAC3B,OACE,sBAAKH,UAAU,OAAf,UACE,qBAAKA,UAAU,KAAf,SAAoB,+BAAOG,EAAKC,OAChC,kCAAKD,EAAKE,KAAV,aAKN,wBAAQC,QAvBK,WACjBb,GAAW,SAACc,GAAD,OAAeA,EAAU,MAsBhC,6BCjBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.8ccc1a6b.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport './App.css';\n\nconst App =()=> {\n  const[items, setItems] = useState([]);\n  const[visible, setVisible] = useState(3);\n  const showMoreItem = ()=>{\n      setVisible((prevValue) => prevValue+3);\n\n      \n  }\n  useEffect(() => {\n     fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then((res) => res.json())\n    .then((data) =>  setItems(data));\n\n  },[])\n  return (\n    <div className=\"App\">\n        <div className='container'>\n          {items.slice(0,visible).map((item)=>{\n            return(\n              <div className='card'>\n                <div className='id'><span>{item.id}</span></div>\n                <p> {item.body} </p>\n              </div>\n            )\n          })}\n          \n          <button onClick={showMoreItem}>Load More</button>\n         \n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}